# Doctest File for the `add_integer` Function
# --------------------------------------------
# This file contains test cases for the `add_integer` function.
# The tests cover a range of scenarios, including:
# - Regular addition with two integers.
# - Handling of optional arguments.
# - Type casting from float to integer.
# - Error handling for invalid types and missing arguments.
# - Special cases like NaN, large floats, and missing required arguments.

# Usage:
# ------
# To run these tests, use the following Python code in your script:
#
#     import doctest
#     doctest.testfile('tests/0-add_integer.txt', verbose=True)
#
# Ensure the `add_integer` function is defined in the current namespace or
# properly imported before running the tests.
#
# Expected Output:
# ----------------
# For each test case, the output will either match the expected result or
# raise an appropriate exception (TypeError, OverflowError, etc.). Any
# discrepancies will be reported by the doctest framework.

# Note:
# -----
# The "..." in traceback examples is used to ignore the exact details
# of the traceback, making the test cases more robust against changes
# in the traceback formatting.

# Begin Test Cases Below

# Import module:
	>>> add_integer = __import__('0-add_integer').add_integer


# Regular addition
----------------
	>>> add_integer(1, 2)
	3

	>>> add_integer(100, -2)
	98


# Missing one argument
--------------------
	>>> add_integer(2)
	100

	>>> add_integer(b=25)
	Traceback (most recent call last):
	    ...
	TypeError: add_integer() missing 1 required positional argument: 'a'


# Integer casting
---------------
	>>> add_integer(100.3, -2)
	98

	>>> add_integer(15, 3.3)
	18

	>>> add_integer(100.3, 3.8)
	103

	>>> add_integer(1e2, 3.41)
	103


# Check type
---------------
	>>> add_integer(4, "School")
	Traceback (most recent call last):
	    ...
	TypeError: b must be an integer


	>>> add_integer(None)
	Traceback (most recent call last):
	    ...
	TypeError: a must be an integer


# Float overflow
--------------------
	>>> add_integer(1e400)
	Traceback (most recent call last):
	    ...
	OverflowError: cannot convert float infinity to integer


	>>> add_integer(89, float('inf'))  # Positive infinity
	Traceback (most recent call last):
	    ...
	OverflowError: cannot convert float infinity to integer


	>>> add_integer(89, float('-inf'))  # Negative infinity
	Traceback (most recent call last):
	    ...
	OverflowError: cannot convert float infinity to integer


# Missing two arguments
--------------------
	>>> add_integer()
	Traceback (most recent call last):
	    ...
	TypeError: add_integer() missing 1 required positional argument: 'a'
