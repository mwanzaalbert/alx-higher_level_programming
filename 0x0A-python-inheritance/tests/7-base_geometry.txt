"""
Test File for the `BaseGeometry` Class

This test file contains doctests to validate the functionality of the 
`BaseGeometry` class and its methods. It includes tests for the following:
- Instantiation of the class.
- Use of the `area()` method.
- Validation of integers with `integer_validator()`.

Usage:
    To run the tests, use the following command:
    $ python3 -m doctest -v ./tests/7-base_geometry.txt

Notes:
------
- This file covers standard and edge cases for the `BaseGeometry` class.
- Ensure that exceptions are raised correctly for invalid inputs.

Author:
-------
Albert Mwanza

Date:
-----
2024-12-22
"""

# Import module:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


# Test: Instantiation of BaseGeometry
>>> bg = BaseGeometry()
>>> print(bg.__class__.__name__)
BaseGeometry


# Test: Validate `integer_validator` existence
>>> hasattr(bg, 'integer_validator')
True

>>> hasattr(bg, 'area')
True

>>> 'integer_validator' in dir(bg)
True


# Test: Attribute not defined in BaseGeometry
>>> hasattr(bg, 'not_an_attribute')
False


# Test: `integer_validator` called with valid arguments
>>> bg.integer_validator("myint", 12)

# Test: Validating multiple integers
>>> bg.integer_validator("myint", 12)

>>> bg.integer_validator("width", 89)


# Test: Invalid validation (string instead of integer)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer


# Test: Invalid validation (value is 0)
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0


# Test: Invalid validation (value is negative)
>>> bg.integer_validator("age", -4)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0


# Test: Invalid validation (value is a float)
>>> bg.integer_validator("age", 13.5)
Traceback (most recent call last):
    ...
TypeError: age must be an integer


# Test: Area method without implementation
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented


# Test: Invalid case - tuple instead of an integer
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
    ...
TypeError: age must be an integer


# Test: Invalid case - list instead of an integer
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
    ...
TypeError: age must be an integer


# Test: Invalid case - boolean instead of an integer
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
    ...
TypeError: age must be an integer


# Test: Invalid case - set instead of an integer
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
    ...
TypeError: age must be an integer


# Test: Invalid case - None instead of an integer
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
    ...
TypeError: age must be an integer

# Test: Invalid case - missing one argument
>>> bg.integer_validator("age")
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(value=12)
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'name'


# Test: Invalid case - missing both arguments
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'


# Test: Instantiation with parameters (invalid case)
>>> bg = BaseGeometry(None)
Traceback (most recent call last):
    ...
TypeError: BaseGeometry() takes no arguments