"""
Test File for the `MyList` Class

This test file contains doctests to validate the functionality of the 
`MyList` class. The class extends the built-in `list` type by adding 
a `print_sorted` method that prints the elements of the list in ascending 
sorted order while preserving the original list.

Usage:
    To run the tests, use the following command:
    $ python3 -m doctest -v mylist_tests.txt

Notes:
------
- This file tests standard operations like list creation, appending, 
  and printing.
- The `print_sorted` method is tested for both standard and edge cases, 
  including handling of negative numbers and an empty list.
- Use `doctest` to ensure correctness and validate behavior.

Author:
-------
Albert Mwanza

Date:
-----
2024-12-21
"""

# Import module:
>>> MyList = __import__('1-my_list').MyList
      

>>> # Case: Class creation and regular print
>>> my_list = MyList()
>>> print(my_list)
[]

>>> # Case: Append and regular print
>>> my_list.append(10)
>>> print(my_list)
[10]

>>> # Case: Append, regular print, and sorted print
>>> my_list.append(3)
>>> print(my_list)
[10, 3]
>>> my_list.print_sorted()
[3, 10]

>>> # Case: Multiple appends, regular print, and sorted print
>>> my_list.append(5)
>>> my_list.append(1)
>>> print(my_list)
[10, 3, 5, 1]
>>> my_list.print_sorted()
[1, 3, 5, 10]

>>> # Case: Append with negative numbers
>>> my_list.append(-2)
>>> print(my_list)
[10, 3, 5, 1, -2]
>>> my_list.print_sorted()
[-2, 1, 3, 5, 10]

>>> # Case: Inheritance check
>>> isinstance(my_list, list)
True

>>> # Case: Empty list and sorted print
>>> empty_list = MyList()
>>> empty_list.print_sorted()
[]

>>> # Case: Check `print_sorted` does not modify original list
>>> print(my_list)
[10, 3, 5, 1, -2]
>>> my_list.print_sorted()
[-2, 1, 3, 5, 10]
>>> print(my_list)
[10, 3, 5, 1, -2]